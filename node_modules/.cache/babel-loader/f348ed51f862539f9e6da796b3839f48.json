{"ast":null,"code":"var _jsxFileName = \"/Users/davidsong/Documents/Workspace/cleanfolio/src/contexts/theme.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\n\nconst ThemeProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [themeName, setThemeName] = useState('light');\n  useEffect(() => {\n    // Always set to light theme by default\n    setThemeName('light');\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    darkMediaQuery.addEventListener('change', e => {\n      setThemeName('light'); // Ignore system preference, always light\n    });\n  }, []);\n\n  const toggleTheme = () => {\n    const name = themeName === 'dark' ? 'light' : 'dark';\n    localStorage.setItem('themeName', name);\n    setThemeName(name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: [{\n      themeName,\n      toggleTheme\n    }],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThemeProvider, \"SuRQqTvpA2I4PIgWuFEVm/A8+ME=\");\n\n_c = ThemeProvider;\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport { ThemeProvider, ThemeContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["/Users/davidsong/Documents/Workspace/cleanfolio/src/contexts/theme.js"],"names":["createContext","useEffect","useState","PropTypes","ThemeContext","ThemeProvider","children","themeName","setThemeName","darkMediaQuery","window","matchMedia","addEventListener","e","toggleTheme","name","localStorage","setItem","propTypes","node","isRequired"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,YAAY,gBAAGJ,aAAa,EAAlC;;AAEA,MAAMK,aAAa,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACtC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,OAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAO,IAAAA,YAAY,CAAC,OAAD,CAAZ;AACA,UAAMC,cAAc,GAAGC,MAAM,CAACC,UAAP,CAAkB,8BAAlB,CAAvB;AACAF,IAAAA,cAAc,CAACG,gBAAf,CAAgC,QAAhC,EAA2CC,CAAD,IAAO;AAC/CL,MAAAA,YAAY,CAAC,OAAD,CAAZ,CAD+C,CACzB;AACvB,KAFD;AAGD,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMM,WAAW,GAAG,MAAM;AACxB,UAAMC,IAAI,GAAGR,SAAS,KAAK,MAAd,GAAuB,OAAvB,GAAiC,MAA9C;AACAS,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCF,IAAlC;AACAP,IAAAA,YAAY,CAACO,IAAD,CAAZ;AACD,GAJD;;AAMA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE,CAAC;AAAER,MAAAA,SAAF;AAAaO,MAAAA;AAAb,KAAD,CAA9B;AAAA,cACGR;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvBD;;GAAMD,a;;KAAAA,a;AAyBNA,aAAa,CAACa,SAAd,GAA0B;AACxBZ,EAAAA,QAAQ,EAAEH,SAAS,CAACgB,IAAV,CAAeC;AADD,CAA1B;AAIA,SAASf,aAAT,EAAwBD,YAAxB","sourcesContent":["import { createContext, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst ThemeContext = createContext()\n\nconst ThemeProvider = ({ children }) => {\n  const [themeName, setThemeName] = useState('light')\n\n  useEffect(() => {\n    // Always set to light theme by default\n    setThemeName('light')\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    darkMediaQuery.addEventListener('change', (e) => {\n      setThemeName('light') // Ignore system preference, always light\n    });\n  }, [])\n\n  const toggleTheme = () => {\n    const name = themeName === 'dark' ? 'light' : 'dark'\n    localStorage.setItem('themeName', name)\n    setThemeName(name)\n  }\n\n  return (\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport { ThemeProvider, ThemeContext }"]},"metadata":{},"sourceType":"module"}