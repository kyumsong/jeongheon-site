{"ast":null,"code":"import{createContext,useEffect,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext();const ThemeProvider=_ref=>{let{children}=_ref;const[themeName,setThemeName]=useState('light');useEffect(()=>{// Always set to light theme by default\nsetThemeName('light');const darkMediaQuery=window.matchMedia('(prefers-color-scheme: dark)');darkMediaQuery.addEventListener('change',e=>{setThemeName('light');// Ignore system preference, always light\n});},[]);const toggleTheme=()=>{const name=themeName==='dark'?'light':'dark';localStorage.setItem('themeName',name);setThemeName(name);};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:[{themeName,toggleTheme}],children:children});};export{ThemeProvider,ThemeContext};","map":{"version":3,"names":["createContext","useEffect","useState","jsx","_jsx","ThemeContext","ThemeProvider","_ref","children","themeName","setThemeName","darkMediaQuery","window","matchMedia","addEventListener","e","toggleTheme","name","localStorage","setItem","Provider","value"],"sources":["/Users/davidsong/Documents/Workspace/jeongheon-site/src/contexts/theme.js"],"sourcesContent":["import { createContext, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst ThemeContext = createContext()\n\nconst ThemeProvider = ({ children }) => {\n  const [themeName, setThemeName] = useState('light')\n\n  useEffect(() => {\n    // Always set to light theme by default\n    setThemeName('light')\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    darkMediaQuery.addEventListener('change', (e) => {\n      setThemeName('light') // Ignore system preference, always light\n    });\n  }, [])\n\n  const toggleTheme = () => {\n    const name = themeName === 'dark' ? 'light' : 'dark'\n    localStorage.setItem('themeName', name)\n    setThemeName(name)\n  }\n\n  return (\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport { ThemeProvider, ThemeContext }"],"mappings":"AAAA,OAASA,aAAa,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,QAAAC,GAAA,IAAAC,IAAA,yBAG1D,KAAM,CAAAC,YAAY,cAAGL,aAAa,CAAC,CAAC,CAEpC,KAAM,CAAAM,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACjC,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGR,QAAQ,CAAC,OAAO,CAAC,CAEnDD,SAAS,CAAC,IAAM,CACd;AACAS,YAAY,CAAC,OAAO,CAAC,CACrB,KAAM,CAAAC,cAAc,CAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CACxEF,cAAc,CAACG,gBAAgB,CAAC,QAAQ,CAAGC,CAAC,EAAK,CAC/CL,YAAY,CAAC,OAAO,CAAC,CAAC;AACxB,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAM,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAAC,IAAI,CAAGR,SAAS,GAAK,MAAM,CAAG,OAAO,CAAG,MAAM,CACpDS,YAAY,CAACC,OAAO,CAAC,WAAW,CAAEF,IAAI,CAAC,CACvCP,YAAY,CAACO,IAAI,CAAC,CACpB,CAAC,CAED,mBACEb,IAAA,CAACC,YAAY,CAACe,QAAQ,EAACC,KAAK,CAAE,CAAC,CAAEZ,SAAS,CAAEO,WAAY,CAAC,CAAE,CAAAR,QAAA,CACxDA,QAAQ,CACY,CAAC,CAE5B,CAAC,CAMD,OAASF,aAAa,CAAED,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}